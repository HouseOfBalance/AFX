--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.3) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v70=v2(v0(v30,16));if v19 then local v77=v5(v70,v19);v19=nil;return v77;else return v70;end end end);local function v20(v31,v32,v33) if v33 then local v71=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -(1 + 0))) -(v32-(620 -((790 -235) + 64)))) + ((1997 -(68 + 997)) -(857 + 74)))) ;return v71-(v71%(569 -(367 + 201))) ;else local v72=927 -(214 + 713) ;local v73;while true do if (v72==(0 + 0)) then v73=(1 + 1)^(v32-(878 -(282 + (1865 -(226 + 1044))))) ;return (((v31%(v73 + v73))>=v73) and 1) or (1637 -((6631 -5108) + 114)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=117 -(32 + 85) ;local v36;local v37;while true do if (v35==(1 + 0)) then return (v37 * (57 + 199)) + v36 ;end if (v35==(957 -(892 + 65))) then v36,v37=v1(v16,v18,v18 + (3 -1) );v18=v18 + (4 -2) ;v35=1 -0 ;end end end local function v23() local v38=350 -(87 + (476 -213)) ;local v39;local v40;local v41;local v42;while true do if (v38==(181 -(67 + 113))) then return (v42 * (12302277 + 4474939)) + (v41 * 65536) + (v40 * (628 -372)) + v39 ;end if (v38==(0 + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + ((9 + 2) -(1005 -(915 + 82))) );v18=v18 + (956 -(802 + 150)) ;v38=2 -1 ;end end end local function v24() local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(2 -1)) then v46=1 + 0 ;v47=(v20(v45,1 -0 ,1207 -(1069 + 118) ) * ((4 -2)^(69 -37))) + v44 ;v43=1 + 1 ;end if (v43==2) then v48=v20(v45,21,54 -23 );v49=((v20(v45,32 + 0 )==(792 -((1531 -1163) + 423))) and  -(3 -(2 + 0))) or (19 -(10 + (29 -21))) ;v43=11 -8 ;end if (v43==0) then v44=v23();v45=v23();v43=443 -(416 + (92 -66)) ;end if (v43==(9 -6)) then if (v48==0) then if (v47==(0 + 0)) then return v49 * (0 -0) ;else v48=439 -((1004 -(814 + 45)) + 293) ;v46=430 -(44 + 386) ;end elseif (v48==(3533 -(998 + 488))) then return ((v47==(0 + 0)) and (v49 * ((1 + 0)/(772 -(201 + (1406 -835)))))) or (v49 * NaN) ;end return v8(v49,v48-1023 ) * (v46 + (v47/((1140 -(116 + 1022))^(3 + 49)))) ;end end end local function v25(v50) local v51=0 + 0 ;local v52;local v53;while true do if (v51==(887 -(261 + 624))) then v53={};for v78=1 -0 , #v52 do v53[v78]=v2(v1(v3(v52,v78,v78)));end v51=(2996 -(1789 + 124)) -(1020 + 60) ;end if (3==v51) then return v6(v53);end if (v51==(1424 -(630 + (1559 -(745 + 21))))) then v52=v3(v16,v18,(v18 + v50) -(3 -2) );v18=v18 + v50 ;v51=9 -7 ;end if (v51==(0 + 0)) then v52=nil;if  not v50 then v50=v23();if (v50==(0 -0)) then return "";end end v51=1748 -(760 + 987) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v54~=(1 -0)) then else v57=nil;v58=nil;v54=2;end if (v54==2) then v59=nil;v60=nil;v54=3;end if (v54~=(0 + 0)) then else v55=0 + 0 ;v56=nil;v54=1;end if (v54==4) then while true do if (v55~=(0 -0)) then else v56=0 -0 ;v57=nil;v55=1 + 0 ;end if (3~=v55) then else v62=nil;while true do local v97=1636 -(1373 + 263) ;local v98;while true do if (v97==(982 -(18 + 964))) then v98=1000 -(451 + 549) ;while true do if (v98~=0) then else local v103=0;while true do if (v103~=(1 + 0)) then else v98=1;break;end if (v103~=(0 -0)) then else if (v56==(11 -8)) then local v219=0 + 0 ;local v220;while true do if (v219==(0 -0)) then v220=1384 -(746 + 638) ;while true do if (v220==(0 + 0)) then local v289=0 -0 ;local v290;while true do if (v289~=(0 + 0)) then else v290=126 -(116 + 10) ;while true do if (v290~=(341 -(218 + 123))) then else local v298=0 + 0 ;while true do if (v298~=(738 -(542 + 196))) then else for v305=1582 -(1535 + 46) ,v23() do v58[v305-1 ]=v28();end return v60;end end end end break;end end end end break;end end end if (2~=v56) then else local v221=0 + 0 ;local v222;local v223;while true do if (v221==(1 + 0)) then while true do if (v222~=0) then else v223=0;while true do if (v223~=1) then else for v294=1 + 0 ,v23() do local v295=560 -(306 + 254) ;local v296;local v297;while true do if (v295==(0 + 0)) then v296=0 -0 ;v297=nil;v295=1 -0 ;end if (v295==(1468 -(899 + 568))) then while true do if (v296~=(0 + 0)) then else v297=v21();if (v20(v297,2 -1 ,406 -(118 + 287) )==(0 -0)) then local v308=603 -(268 + 335) ;local v309;local v310;local v311;local v312;while true do if (v308==(1122 -(118 + 1003))) then v311=nil;v312=nil;v308=5 -3 ;end if (v308==(290 -(60 + 230))) then v309=377 -(142 + 235) ;v310=nil;v308=1;end if (v308==2) then while true do if ((575 -(426 + 146))==v309) then if (v20(v311,1 + 2 ,3)~=(1 + 0)) then else v312[4]=v62[v312[7 -3 ]];end v57[v294]=v312;break;end if (v309~=2) then else local v317=1456 -(282 + 1174) ;local v318;while true do if (v317==(811 -(569 + 242))) then v318=0;while true do if (v318~=(0 -0)) then else if (v20(v311,1 + 0 ,1025 -(706 + 318) )~=(1252 -(721 + 530))) then else v312[2]=v62[v312[1273 -(945 + 326) ]];end if (v20(v311,4 -2 ,2 + 0 )==1) then v312[7 -4 ]=v62[v312[6 -3 ]];end v318=701 -(271 + 429) ;end if (1==v318) then v309=3 + 0 ;break;end end break;end end end if (v309==(1501 -(1408 + 92))) then v312={v22(),v22(),nil,nil};if (v310==(1329 -(797 + 532))) then local v321=0;local v322;local v323;while true do if (v321==(1 + 0)) then while true do if ((1288 -(993 + 295))==v322) then v323=0 -0 ;while true do if (v323~=(1202 -(373 + 829))) then else v312[3]=v22();v312[1 + 3 ]=v22();break;end end break;end end break;end if ((731 -(476 + 255))==v321) then local v325=1130 -(369 + 761) ;while true do if (v325==1) then v321=1172 -(418 + 753) ;break;end if (v325~=(0 -0)) then else v322=0 + 0 ;v323=nil;v325=239 -(64 + 174) ;end end end end elseif (v310==(1 + 0)) then v312[3]=v23();elseif (v310==(1 + 1)) then v312[339 -(144 + 192) ]=v23() -((1 + 1)^(5 + 11)) ;elseif (v310==(532 -(406 + 123))) then local v331=1769 -(1749 + 20) ;local v332;while true do if (0~=v331) then else v332=0 + 0 ;while true do if (v332==(0 + 0)) then v312[2 + 1 ]=v23() -((1324 -(1249 + 73))^(1596 -(1183 + 397))) ;v312[2 + 2 ]=v22();break;end end break;end end end v309=1147 -(466 + 679) ;end if (v309==0) then v310=v20(v297,5 -3 ,3);v311=v20(v297,3 + 1 ,6);v309=2 -1 ;end end break;end end end break;end end break;end end end v56=3;break;end if (v223~=(0 -0)) then else local v293=1975 -(1913 + 62) ;while true do if (v293~=(1900 -(106 + 1794))) then else for v300=1,v61 do local v301=0 -0 ;local v302;local v303;local v304;while true do if ((1934 -(565 + 1368))==v301) then v304=nil;while true do if (0==v302) then local v313=0 -0 ;local v314;while true do if (v313==0) then v314=0 + 0 ;while true do if ((1662 -(1477 + 184))==v314) then v302=1 -0 ;break;end if (v314~=0) then else v303=v21();v304=nil;v314=1 + 0 ;end end break;end end end if ((1 + 0)~=v302) then else if (v303==(2 -1)) then v304=v21()~=(0 -0) ;elseif (v303==(116 -(4 + 110))) then v304=v24();elseif (v303~=(8 -5)) then else v304=v25();end v62[v300]=v304;break;end end break;end if (v301~=0) then else local v307=304 -(244 + 60) ;while true do if ((0 + 0)==v307) then v302=0;v303=nil;v307=585 -(57 + 527) ;end if ((1428 -(41 + 1386))~=v307) then else v301=1 + 0 ;break;end end end end end v60[3]=v21();v293=1;end if (v293~=(104 -(17 + 86))) then else v223=1;break;end end end end break;end end break;end if (v221==(0 + 0)) then v222=0 + 0 ;v223=nil;v221=1;end end end v103=1;end end end if (v98~=1) then else if (v56==(1614 -(1565 + 48))) then local v104=0 + 0 ;local v105;while true do if (v104==0) then v105=0 -0 ;while true do if (v105~=(2 -1)) then else v62={};v56=168 -(122 + 44) ;break;end if (v105~=(0 -0)) then else local v272=0 -0 ;local v273;while true do if (v272==(0 + 0)) then v273=0 -0 ;while true do if (v273==(0 + 0)) then v60={v57,v58,nil,v59};v61=v23();v273=1 + 0 ;end if (v273~=1) then else v105=1;break;end end break;end end end end break;end end end if (v56==(1257 -(1043 + 214))) then local v106=0 -0 ;while true do if (v106==(0 -0)) then v57={};v58={};v106=1019 -(697 + 321) ;end if (v106~=(3 -2)) then else v59={};v56=1213 -(323 + 889) ;break;end end end break;end end break;end end end break;end if (v55==1) then v58=nil;v59=nil;v55=3 -1 ;end if (v55==(5 -3)) then v60=nil;v61=nil;v55=583 -(361 + 219) ;end end break;end if (v54~=(5 -2)) then else v61=nil;v62=nil;v54=4;end end end local function v29(v63,v64,v65) local v66=0;local v67;local v68;local v69;while true do if (v66==1) then v69=v63[3];return function(...) local v80=v67;local v81=v68;local v82=v69;local v83=v27;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v12("#",...) -1 ;local v89={};local v90={};for v94=0,v88 do if (v94>=v82) then v86[v94-v82 ]=v87[v94 + 1 ];else v90[v94]=v87[v94 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=30) then if (v93<=14) then if (v93<=6) then if (v93<=2) then if (v93<=0) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==1) then local v108=v92[2];local v109,v110=v83(v90[v108](v90[v108 + 1 ]));v85=(v110 + v108) -1 ;local v111=0;for v224=v108,v85 do v111=v111 + 1 ;v90[v224]=v109[v111];end else do return;end end elseif (v93<=4) then if (v93>3) then local v112=v92[2];local v113=v92[4];local v114=v112 + 2 ;local v115={v90[v112](v90[v112 + 1 ],v90[v114])};for v227=1,v113 do v90[v114 + v227 ]=v115[v227];end local v116=v115[1];if v116 then v90[v114]=v116;v84=v92[3];else v84=v84 + 1 ;end else local v117=v92[2];v90[v117]=v90[v117](v13(v90,v117 + 1 ,v92[3]));end elseif (v93>5) then if (v90[v92[2]]~=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93<=10) then if (v93<=8) then if (v93>7) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else for v230=v92[2],v92[3] do v90[v230]=nil;end end elseif (v93==9) then local v121=v92[2];local v122,v123=v83(v90[v121](v90[v121 + 1 ]));v85=(v123 + v121) -1 ;local v124=0;for v232=v121,v85 do v124=v124 + 1 ;v90[v232]=v122[v124];end else local v125=v92[2];v90[v125](v90[v125 + 1 ]);end elseif (v93<=12) then if (v93>11) then v90[v92[2]]=v90[v92[3]][v92[4]];elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>13) then v90[v92[2]]={};else v65[v92[3]]=v90[v92[2]];end elseif (v93<=22) then if (v93<=18) then if (v93<=16) then if (v93==15) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>17) then v90[v92[2]]=v92[3]~=0 ;else v84=v92[3];end elseif (v93<=20) then if (v93>19) then v90[v92[2]][v92[3]]=v90[v92[4]];else v90[v92[2]]=v90[v92[3]];end elseif (v93==21) then if (v90[v92[2]]~=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else local v137=0;local v138;while true do if (v137==0) then v138=v92[2];v90[v138]=v90[v138](v13(v90,v138 + 1 ,v92[3]));break;end end end elseif (v93<=26) then if (v93<=24) then if (v93>23) then local v139=v92[2];v90[v139]=v90[v139]();else v65[v92[3]]=v90[v92[2]];end elseif (v93==25) then local v143=v92[2];local v144=v90[v143];for v235=v143 + 1 ,v92[3] do v7(v144,v90[v235]);end else v90[v92[2]]=v90[v92[3]];end elseif (v93<=28) then if (v93==27) then local v147=v92[2];v90[v147]=v90[v147]();else local v149=v92[3];local v150=v90[v149];for v236=v149 + 1 ,v92[4] do v150=v150   .. v90[v236] ;end v90[v92[2]]=v150;end elseif (v93>29) then local v152=v92[2];v90[v152](v90[v152 + 1 ]);elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=46) then if (v93<=38) then if (v93<=34) then if (v93<=32) then if (v93==31) then v90[v92[2]]=v90[v92[3]]/v92[4] ;elseif (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>33) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else do return;end end elseif (v93<=36) then if (v93>35) then v90[v92[2]]={};else local v155=v92[2];local v156=v92[4];local v157=v155 + 2 ;local v158={v90[v155](v90[v155 + 1 ],v90[v157])};for v237=1,v156 do v90[v157 + v237 ]=v158[v237];end local v159=v158[1];if v159 then v90[v157]=v159;v84=v92[3];else v84=v84 + 1 ;end end elseif (v93==37) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]=v92[3]~=0 ;end elseif (v93<=42) then if (v93<=40) then if (v93>39) then local v161=0;local v162;local v163;local v164;while true do if (v161==0) then v162=v92[2];v163={v90[v162](v13(v90,v162 + 1 ,v85))};v161=1;end if (v161==1) then v164=0;for v274=v162,v92[4] do local v275=0;while true do if (v275==0) then v164=v164 + 1 ;v90[v274]=v163[v164];break;end end end break;end end else v90[v92[2]]=v90[v92[3]] * v92[4] ;end elseif (v93==41) then v90[v92[2]][v92[3]]=v92[4];else local v168=v92[2];local v169=v90[v168];local v170=v92[3];for v240=1,v170 do v169[v240]=v90[v168 + v240 ];end end elseif (v93<=44) then if (v93>43) then v90[v92[2]]=v90[v92[3]] * v92[4] ;else local v172=0;local v173;local v174;local v175;while true do if (v172==0) then v173=v92[2];v174={v90[v173](v13(v90,v173 + 1 ,v85))};v172=1;end if (1==v172) then v175=0;for v276=v173,v92[4] do v175=v175 + 1 ;v90[v276]=v174[v175];end break;end end end elseif (v93==45) then local v176=0;local v177;local v178;local v179;while true do if (v176==0) then v177=v92[2];v178=v90[v177];v176=1;end if (v176==1) then v179=v92[3];for v279=1,v179 do v178[v279]=v90[v177 + v279 ];end break;end end else v90[v92[2]]=v65[v92[3]];end elseif (v93<=54) then if (v93<=50) then if (v93<=48) then if (v93>47) then local v182=v92[2];local v183=v90[v92[3]];v90[v182 + 1 ]=v183;v90[v182]=v183[v92[4]];else v90[v92[2]][v92[3]]=v92[4];end elseif (v93==49) then local v189=v92[2];v90[v189]=v90[v189](v90[v189 + 1 ]);else local v191=v92[2];v90[v191]=v90[v191](v90[v191 + 1 ]);end elseif (v93<=52) then if (v93==51) then v90[v92[2]]=v92[3];else local v195=0;local v196;local v197;local v198;while true do if (v195==1) then v198=0;for v282=v196,v92[4] do v198=v198 + 1 ;v90[v282]=v197[v198];end break;end if (v195==0) then v196=v92[2];v197={v90[v196](v90[v196 + 1 ])};v195=1;end end end elseif (v93==53) then for v243=v92[2],v92[3] do v90[v243]=nil;end else v90[v92[2]]=v90[v92[3]]/v92[4] ;end elseif (v93<=58) then if (v93<=56) then if (v93==55) then v90[v92[2]]=v92[3];else local v202=v92[2];local v203=v90[v92[3]];v90[v202 + 1 ]=v203;v90[v202]=v203[v92[4]];end elseif (v93>57) then local v207=0;local v208;local v209;while true do if (0==v207) then v208=v92[3];v209=v90[v208];v207=1;end if (1==v207) then for v285=v208 + 1 ,v92[4] do v209=v209   .. v90[v285] ;end v90[v92[2]]=v209;break;end end else v84=v92[3];end elseif (v93<=60) then if (v93==59) then v90[v92[2]]=v90[v92[3]][v92[4]];else local v213=0;local v214;local v215;local v216;while true do if (0==v213) then v214=v92[2];v215={v90[v214](v90[v214 + 1 ])};v213=1;end if (1==v213) then v216=0;for v286=v214,v92[4] do v216=v216 + 1 ;v90[v286]=v215[v216];end break;end end end elseif (v93>61) then v90[v92[2]]=v65[v92[3]];elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end v84=v84 + 1 ;end end;end if (v66==0) then v67=v63[1];v68=v63[2];v66=1;end end end return v29(v28(),{},v17)(...);end return vv9(),...);